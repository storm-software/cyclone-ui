{
  "commands": {
    "build": {
      "aliases": [],
      "args": {
        "projectRoot": {
          "description": "The path of the project to build relative to the workspace root",
          "name": "projectRoot",
          "noCacheDefault": false,
          "required": true
        }
      },
      "description": "Build the theme configuration for the client application based on the colors provided in the Storm configuration file",
      "examples": [
        {
          "description": "Build the themes using the output path from the Storm configuration file",
          "command": "<%= config.bin %> <%= command.id %> build"
        },
        {
          "description": "Build the themes, and write the output to ./path/to/output",
          "command": "<%= config.bin %> <%= command.id %> build --output=./path/to/output"
        },
        {
          "description": "Build the themes, write the output to ./path/to/output, and skip confirmation prompts",
          "command": "<%= config.bin %> <%= command.id %> build --output=./path/to/output --skip"
        }
      ],
      "flags": {
        "outputPath": {
          "aliases": [
            "output",
            "outDir",
            "output-dir"
          ],
          "char": "o",
          "deprecateAliases": false,
          "description": "The location to output the design token file",
          "hidden": false,
          "name": "outputPath",
          "noCacheDefault": false,
          "required": false,
          "summary": "Output directory",
          "hasDynamicHelp": false,
          "helpValue": "<directory>",
          "multiple": false,
          "type": "option"
        },
        "tsconfig": {
          "aliases": [
            "tsconfig",
            "ts-config"
          ],
          "char": "t",
          "deprecateAliases": false,
          "description": "The path to the tsconfig.json file for the project",
          "hidden": false,
          "name": "tsconfig",
          "noCacheDefault": false,
          "required": false,
          "summary": "tsconfig.json File",
          "hasDynamicHelp": false,
          "helpValue": "<file>",
          "multiple": false,
          "type": "option"
        },
        "bundle": {
          "char": "b",
          "deprecateAliases": false,
          "description": "Should the build process bundle the output files",
          "hidden": false,
          "name": "bundle",
          "noCacheDefault": false,
          "required": false,
          "summary": "Should Bundle",
          "allowNo": false,
          "type": "boolean"
        },
        "clean": {
          "char": "c",
          "deprecateAliases": false,
          "description": "Should the output directory be cleaned before building",
          "hidden": false,
          "name": "clean",
          "noCacheDefault": false,
          "required": false,
          "summary": "Clean Output",
          "allowNo": false,
          "type": "boolean"
        },
        "skip": {
          "aliases": [
            "is-cli",
            "is-cli-mode"
          ],
          "char": "s",
          "deprecateAliases": false,
          "description": "Skip all confirmation prompts and use the default values",
          "hidden": false,
          "name": "skip",
          "noCacheDefault": false,
          "required": false,
          "summary": "Skip confirmation prompts",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "build",
      "pluginAlias": "@cyclone-ui/cli",
      "pluginName": "@cyclone-ui/cli",
      "pluginType": "core",
      "strict": false,
      "summary": "Cyclone UI - Build",
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "build.js"
      ]
    },
    "registry:get": {
      "aliases": [],
      "args": {
        "component": {
          "description": "The name of the component to add to the local components library package",
          "name": "component",
          "noCacheDefault": false,
          "required": false
        }
      },
      "description": "A command to add a copy of a design component from the remote Cyclone UI registry to the local components library package",
      "examples": [
        {
          "description": "Initialize the themes using the output path from the Storm configuration file",
          "command": "<%= config.bin %> <%= command.id %> init"
        },
        {
          "description": "Initialize the themes, and write the output to ./path/to/output",
          "command": "<%= config.bin %> <%= command.id %> init --output=./path/to/output"
        },
        {
          "description": "Initialize the themes, write the output to ./path/to/output, and skip confirmation prompts",
          "command": "<%= config.bin %> <%= command.id %> init --output=./path/to/output --skip"
        }
      ],
      "flags": {
        "library": {
          "aliases": [
            "lib"
          ],
          "char": "l",
          "deprecateAliases": false,
          "description": "The location of the local components library package directory",
          "hidden": false,
          "name": "library",
          "required": false,
          "summary": "Components library directory",
          "hasDynamicHelp": false,
          "helpValue": "<directory>",
          "multiple": false,
          "type": "option"
        },
        "skip": {
          "char": "s",
          "deprecateAliases": false,
          "description": "Skip all confirmation prompts and use the default values",
          "hidden": false,
          "name": "skip",
          "noCacheDefault": false,
          "required": false,
          "summary": "Skip confirmation prompts",
          "allowNo": true,
          "type": "boolean"
        },
        "registry": {
          "aliases": [
            "registryUrl",
            "registry-url"
          ],
          "char": "r",
          "deprecateAliases": false,
          "description": "The URL of the Cyclone UI remote registry to use for the components library package",
          "hidden": false,
          "name": "registry",
          "required": false,
          "summary": "Registry URL",
          "hasDynamicHelp": false,
          "helpValue": "<url>",
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "registry:get",
      "pluginAlias": "@cyclone-ui/cli",
      "pluginName": "@cyclone-ui/cli",
      "pluginType": "core",
      "strict": false,
      "summary": "Cyclone UI - Get Component",
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "registry",
        "get.js"
      ]
    },
    "theme:clean": {
      "aliases": [],
      "args": {
        "name": {
          "default": "default",
          "description": "The name of the specific theme to assign the design token to",
          "name": "name",
          "noCacheDefault": false,
          "required": true
        }
      },
      "description": "Clean the theme configuration for the client application based on the colors provided in the Storm configuration file",
      "examples": [
        {
          "description": "Clean the themes using the output path from the Storm configuration file",
          "command": "<%= config.bin %> <%= command.id %> clean"
        },
        {
          "description": "Clean the themes, and write the output to ./path/to/output",
          "command": "<%= config.bin %> <%= command.id %> clean --output=./path/to/output"
        },
        {
          "description": "Clean the themes, write the output to ./path/to/output, and skip confirmation prompts",
          "command": "<%= config.bin %> <%= command.id %> clean --output=./path/to/output --skip"
        }
      ],
      "flags": {
        "output": {
          "aliases": [
            "outDir",
            "output-dir"
          ],
          "char": "o",
          "deprecateAliases": false,
          "description": "The location to output the design token file",
          "env": "STORM_OUTPUT_DIRECTORY",
          "hidden": false,
          "name": "output",
          "noCacheDefault": false,
          "required": false,
          "summary": "Output directory",
          "default": ".storm",
          "hasDynamicHelp": false,
          "helpValue": "<directory>",
          "multiple": false,
          "type": "option"
        },
        "skip": {
          "char": "s",
          "deprecateAliases": false,
          "description": "Skip all confirmation prompts and use the default values",
          "hidden": false,
          "name": "skip",
          "noCacheDefault": false,
          "required": false,
          "summary": "Skip confirmation prompts",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "theme:clean",
      "pluginAlias": "@cyclone-ui/cli",
      "pluginName": "@cyclone-ui/cli",
      "pluginType": "core",
      "strict": false,
      "summary": "Cyclone UI - Clean Themes",
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "theme",
        "clean.js"
      ]
    },
    "theme:init": {
      "aliases": [],
      "args": {
        "name": {
          "default": "brand",
          "description": "The name of the specific theme to assign the design token to",
          "name": "name",
          "noCacheDefault": false,
          "required": true
        }
      },
      "description": "Initialize the theme configuration for the client application based on the colors provided in the Storm configuration file",
      "examples": [
        {
          "description": "Initialize the themes using the output path from the Storm configuration file",
          "command": "<%= config.bin %> <%= command.id %> init"
        },
        {
          "description": "Initialize the themes, and write the output to ./path/to/output",
          "command": "<%= config.bin %> <%= command.id %> init --output=./path/to/output"
        },
        {
          "description": "Initialize the themes, write the output to ./path/to/output, and skip confirmation prompts",
          "command": "<%= config.bin %> <%= command.id %> init --output=./path/to/output --skip"
        }
      ],
      "flags": {
        "outputPath": {
          "aliases": [
            "outDir",
            "output-dir"
          ],
          "char": "o",
          "deprecateAliases": false,
          "description": "The location to output the design token file",
          "hidden": false,
          "name": "outputPath",
          "noCacheDefault": false,
          "required": false,
          "summary": "Output directory",
          "default": ".storm/themes",
          "hasDynamicHelp": false,
          "helpValue": "<directory>",
          "multiple": false,
          "type": "option"
        },
        "skip": {
          "char": "s",
          "deprecateAliases": false,
          "description": "Skip all confirmation prompts and use the default values",
          "hidden": false,
          "name": "skip",
          "noCacheDefault": false,
          "required": false,
          "summary": "Skip confirmation prompts",
          "allowNo": true,
          "type": "boolean"
        },
        "clean": {
          "char": "c",
          "deprecateAliases": false,
          "description": "Remove all theme files from the output directory before generating new themes",
          "hidden": false,
          "name": "clean",
          "noCacheDefault": false,
          "required": false,
          "summary": "Clean output directory",
          "allowNo": true,
          "type": "boolean"
        },
        "json": {
          "char": "j",
          "deprecateAliases": false,
          "description": "Should the design token file be generated as a JSON file",
          "hidden": false,
          "name": "json",
          "noCacheDefault": false,
          "required": false,
          "summary": "Generate JSON file",
          "allowNo": true,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "theme:init",
      "pluginAlias": "@cyclone-ui/cli",
      "pluginName": "@cyclone-ui/cli",
      "pluginType": "core",
      "strict": false,
      "summary": "Cyclone UI - Initialize Themes",
      "enableJsonFlag": false,
      "isESM": true,
      "relativePath": [
        "dist",
        "commands",
        "theme",
        "init.js"
      ]
    }
  },
  "version": "0.0.1"
}
name: "CI/CD"

on:
  workflow_dispatch:
    inputs:
      tag:
        description: override release tag
        required: false
  push:
    branches:
      - main
      - canary
      - experimental

jobs:
  start:
    name: "Send in process notification"
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: github.repository == 'storm-software/cyclone-ui' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/canary' || github.ref == 'refs/heads/experimental')
    steps:
      - name: Send notification - Deployment started
        uses: storm-software/action-notify@main
        with:
          title: "Deployment for ${{ github.repository }} has started (In Progress)"
          subtitle: "Deployment for ${{ github.repository }} has started - #${{ github.run_number }}"
          description: "Deployment for ${{ github.repository }} is currently in process - #${{ github.run_number }}. Click here to see the full workflow details: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}."
          color: 2077350
          status: "In Progress"
          slack-token: ${{ secrets.STORM_BOT_SLACK_TOKEN }}
          telegram-token: ${{ secrets.STORM_BOT_TELEGRAM_TOKEN }}
          telegram-chat: ${{ secrets.STORM_BOT_TELEGRAM_NOTIFICATION_CHAT }}
          discord-webhook: ${{ secrets.STORM_BOT_DISCORD_WEBHOOK}}

  process:
    name: "Continuous Integration"
    if: always() && !cancelled() && !contains(needs.*.result, 'failure') && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    needs:
      - start
    steps:
      - name: Checkout [Pull Request]
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'pull_request' }}
        with:
          # By default, PRs will be checked-out based on the Merge Commit, but we want the actual branch HEAD.
          ref: ${{ github.event.pull_request.head.sha }}
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          token: ${{ secrets.STORM_BOT_GITHUB_TOKEN }}

      - name: Checkout `main` branch
        uses: actions/checkout@v4
        if: ${{ github.event_name != 'pull_request' }}
        with:
          # We need to fetch all branches and commits so that Nx affected has a base to compare against.
          fetch-depth: 0
          token: ${{ secrets.STORM_BOT_GITHUB_TOKEN }}

      - name: Setup workspace
        uses: storm-software/action-setup@main
        with:
          package-manager: pnpm
          package-manager-version: 9.10.0
          storm-bot: Stormie-Bot
          storm-bot-github-token: ${{ secrets.STORM_BOT_GITHUB_TOKEN }}

      - name: Build Cyclone-UI Nx-Plugin packages
        run: pnpm build-plugins
        shell: bash

      - name: Configure git
        run: |
          git config user.name "Stormie-Bot"
          git config user.email "bot@stormsoftware.com"
          git config lfs.allowincompletepush true
          npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
        shell: bash

      - name: Get appropriate base and head commits for `nx affected` commands
        uses: nrwl/nx-set-shas@v4
        with:
          main-branch-name: "main"

      - name: Set appropriate base and head commits for `nx affected` commands
        run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"
        shell: bash

      - name: Add permissions to CLI tools
        run: chmod a=rwx apps/cli/bin/run.js

      - name: Run build script
        run: pnpm build-all
        shell: bash

      # - name: Run linters scripts
      #   run: pnpm lint
      #   shell: bash

      # - name: Super-linter
      #   uses: super-linter/super-linter@v6.5.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.STORM_BOT_GITHUB_TOKEN }}

      # - name: Markdown-linter
      #   uses: DavidAnson/markdownlint-cli2-action@v16

      # - name: Run formatters scripts
      #   run: pnpm format
      #   shell: bash

      # - name: Re-run build script
      #   run: pnpm build-all
      #   shell: bash

      # - uses: cloudflare/wrangler-action@v3
      #   with:
      #     apiToken: ${{ secrets.STORM_BOT_CLOUDFLARE_TOKEN }}
      #     accountId: ${{ secrets.STORM_BOT_CLOUDFLARE_ACCOUNT }}

      - name: Release repository updates
        run: pnpm release --base=${{ env.NX_BASE }} --head=${{ env.NX_HEAD }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
          GH_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.STORM_BOT_NPM_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.STORM_BOT_CARGO_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.STORM_BOT_CLOUDFLARE_TOKEN }}
          STORM_BOT: Stormie-Bot
          STORM_WORKSPACE_ROOT: ${{ github.workspace }}
          STORM_REPOSITORY: ${{ github.repositoryUrl }}
          CYCLONE_REGISTRY_ACCESS_KEY: ${{ secrets.CYCLONE_REGISTRY_ACCESS_KEY }}
          CYCLONE_REGISTRY_SECRET_KEY: ${{ secrets.CYCLONE_REGISTRY_SECRET_KEY }}
          TAG: ${{ inputs.tag }}

      # - name: Publish design components to Storm CDN Registry
      #   run: pnpm nx run-many -t registry --projects=components/* --parallel=5
      #   shell: bash
      #   env:
      #     CYCLONE_REGISTRY_ACCESS_KEY: ${{ secrets.CYCLONE_REGISTRY_ACCESS_KEY }}
      #     CYCLONE_REGISTRY_SECRET_KEY: ${{ secrets.CYCLONE_REGISTRY_SECRET_KEY }}

  success:
    needs:
      - process
    if: ${{ success() }}
    name: Send success notification
    runs-on: ubuntu-latest
    steps:
      - name: Send notification - Deployment successful
        uses: storm-software/action-notify@main
        with:
          title: "Deployment for ${{ github.repository }} has finished (Success)"
          subtitle: "Deployment for ${{ github.repository }} has finished successfully - #${{ github.run_number }}"
          description: "Deployment for ${{ github.repository }} has finished successfully - #${{ github.run_number }}. Click here to see the full workflow details: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}."
          color: 556891
          status: "Success"
          slack-token: ${{ secrets.STORM_BOT_SLACK_TOKEN }}
          telegram-token: ${{ secrets.STORM_BOT_TELEGRAM_TOKEN }}
          telegram-chat: ${{ secrets.STORM_BOT_TELEGRAM_NOTIFICATION_CHAT }}
          discord-webhook: ${{ secrets.STORM_BOT_DISCORD_WEBHOOK}}

  failure:
    needs:
      - process
    if: ${{ failure() }}
    name: Send failure notification
    runs-on: ubuntu-latest
    steps:
      - name: Send notification - Deployment successful
        uses: storm-software/action-notify@main
        with:
          title: "Deployment for ${{ github.repository }} has finished (Failure)"
          subtitle: "Deployment for ${{ github.repository }} finished with failures - #${{ github.run_number }}"
          description: "Deployment for ${{ github.repository }} finished with failures - #${{ github.run_number }}. Click here to see the full workflow details: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}."
          color: 10027008
          status: "Failure"
          slack-token: ${{ secrets.STORM_BOT_SLACK_TOKEN }}
          telegram-token: ${{ secrets.STORM_BOT_TELEGRAM_TOKEN }}
          telegram-chat: ${{ secrets.STORM_BOT_TELEGRAM_NOTIFICATION_CHAT }}
          discord-webhook: ${{ secrets.STORM_BOT_DISCORD_WEBHOOK}}

  cancelled:
    needs:
      - process
    if: ${{ cancelled() }}
    name: Send cancelled notification
    runs-on: ubuntu-latest
    steps:
      - name: Send notification - Deployment cancelled
        uses: storm-software/action-notify@main
        with:
          title: "Deployment for ${{ github.repository }} has finished (Cancelled)"
          subtitle: "Deployment for ${{ github.repository }} was cancelled - #${{ github.run_number }}"
          description: "Deployment for ${{ github.repository }} was stopped before it could complete - #${{ github.run_number }}. Click here to see the full workflow details: ${{ github.event.pull_request.html_url || github.event.head_commit.url }}."
          color: 16565273
          status: "Cancelled"
          slack-token: ${{ secrets.STORM_BOT_SLACK_TOKEN }}
          telegram-token: ${{ secrets.STORM_BOT_TELEGRAM_TOKEN }}
          telegram-chat: ${{ secrets.STORM_BOT_TELEGRAM_NOTIFICATION_CHAT }}
          discord-webhook: ${{ secrets.STORM_BOT_DISCORD_WEBHOOK}}

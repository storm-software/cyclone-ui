{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.43.1",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@cyclone-ui/build!",
  "docComment": "",
  "name": "@cyclone-ui/build",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@cyclone-ui/build!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@cyclone-ui/build!build:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "build: ({ projectRoot, root, outputPath, jsOnly, skipTypes, skipInitialTypes, skipJS, skipMjs, bundle, bundleNodeModules, clean, cleanBuildOnly, watch, declarationToRoot, ignoreBaseUrl, minify, baseUrl, tsConfig, exclude }: "
            },
            {
              "kind": "Reference",
              "text": "BuildOptions",
              "canonicalReference": "@cyclone-ui/build!BuildOptions:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            }
          ],
          "fileUrlPath": "packages/build/src/build.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ projectRoot, root, outputPath, jsOnly, skipTypes, skipInitialTypes, skipJS, skipMjs, bundle, bundleNodeModules, clean, cleanBuildOnly, watch, declarationToRoot, ignoreBaseUrl, minify, baseUrl, tsConfig, exclude }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "build"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@cyclone-ui/build!BuildOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BuildOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    projectRoot: string;\n    root: string;\n    outputPath: string;\n    jsOnly?: boolean;\n    skipTypes?: boolean;\n    skipInitialTypes?: boolean;\n    skipJS?: boolean;\n    skipMjs?: boolean;\n    bundle?: boolean;\n    bundleNodeModules?: boolean;\n    clean?: boolean;\n    cleanBuildOnly?: boolean;\n    watch?: boolean;\n    declarationToRoot?: boolean;\n    ignoreBaseUrl?: boolean;\n    minify?: boolean;\n    baseUrl?: string;\n    tsConfig: string;\n    exclude?: string | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/build/src/build.d.ts",
          "releaseTag": "Public",
          "name": "BuildOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@cyclone-ui/build!createProgram:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createProgram(config: "
            },
            {
              "kind": "Reference",
              "text": "StormConfig",
              "canonicalReference": "@storm-software/config!StormConfig:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<import(\"commander\").Command>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/build/src/cli/index.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createProgram"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cyclone-ui/build!default_alias_1:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: ({ patterns, skipNodeModulesBundle, disabled }: "
            },
            {
              "kind": "Content",
              "text": "{\n    patterns?: string[] | "
            },
            {
              "kind": "Reference",
              "text": "RegExp",
              "canonicalReference": "!RegExp:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n    skipNodeModulesBundle?: boolean;\n    disabled?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    setup(build: any): void;\n}"
            }
          ],
          "fileUrlPath": "tmp/.tsup/declaration/packages/build/src/plugins/external-node-plugin.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ patterns, skipNodeModulesBundle, disabled }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "default_alias_1"
        },
        {
          "kind": "Function",
          "canonicalReference": "@cyclone-ui/build!default_alias:function(1)",
          "docComment": "/**\n * alias plugin  @description config example:\n * ```\n * {\n *   '@lib': '/some/absolute/path'\n * }\n * ```\n *\n * then `import { something } from '@lib/xxx'` will be transformed to `import { something } from '/some/absolute/path/xxx'`\n *\n * @param config - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "_default: (config: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "{\n    name: string;\n    setup(build: any): void;\n}"
            }
          ],
          "fileUrlPath": "packages/build/src/plugins/esbuild-alias-plugin.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "config",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "default_alias"
        }
      ]
    }
  ]
}
